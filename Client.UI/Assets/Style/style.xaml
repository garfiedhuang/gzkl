<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:hc="https://handyorg.github.io/handycontrol"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:GZKL.Cilent.UI.CustomControls.Attach"
                    >

    <Style TargetType="Button" x:Key="ControlBtnStyle">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Foreground" Value="#959595"/>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent" Name="back">
                        <TextBlock Text="{Binding Content, RelativeSource={RelativeSource AncestorType=Button, Mode=FindAncestor}}" 
                                   VerticalAlignment="Center" FontFamily="../../Fonts/Small/#iconfont" HorizontalAlignment="Center" FontSize="16"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="back" Property="Background" Value="#f8f9fb"></Setter>
                            <Setter TargetName="back" Property="Opacity" Value="0.5"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Button" x:Key="IconBtn">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <hc:SimplePanel>
                        <Border Background="{TemplateBinding Background}" CornerRadius="{Binding Path=(hc:BorderElement.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}"/>
                        <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{Binding Path=(hc:BorderElement.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}">
                                <TextBlock Text="{TemplateBinding local:IconElement.Icon}" FontFamily="../../Fonts/#iconfont" FontSize="13" VerticalAlignment="Center"></TextBlock>
                                <ContentPresenter x:Name="ContentPresenterMain" RecognizesAccessKey="True" VerticalAlignment="Center" Margin="4,0,0,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </StackPanel>
                        </Border>
                    </hc:SimplePanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Button" x:Key="AddBtnStyle" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="Width" Value="80"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="BorderBrush" Value="#a3d3ff"/>
        <Setter Property="Foreground" Value="#1890ff"/>
        <Setter Property="Background" Value="#e8f4ff"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <hc:SimplePanel>
                        <Border Background="{TemplateBinding Background}" CornerRadius="{Binding Path=(hc:BorderElement.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}"/>
                        <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{Binding Path=(hc:BorderElement.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}">
                                <TextBlock Text="&#xe68d;" FontFamily="../../Fonts/#iconfont" FontSize="13" VerticalAlignment="Center"></TextBlock>
                                <ContentPresenter x:Name="ContentPresenterMain" RecognizesAccessKey="True" VerticalAlignment="Center" Margin="4,0,0,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </StackPanel>
                        </Border>
                    </hc:SimplePanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#1890ff"/>
                <Setter Property="BorderBrush" Value="#1890ff"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Button" x:Key="EditBtnStyle" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="Width" Value="80"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="BorderBrush" Value="#a1ebc2"/>
        <Setter Property="Foreground" Value="#13ce66"/>
        <Setter Property="Background" Value="#e7faf0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <hc:SimplePanel>
                        <Border Background="{TemplateBinding Background}" CornerRadius="{Binding Path=(hc:BorderElement.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}"/>
                        <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{Binding Path=(hc:BorderElement.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}">
                                <TextBlock Text="&#xe684;" FontFamily="../../Fonts/#iconfont" FontSize="13" VerticalAlignment="Center"></TextBlock>
                                <ContentPresenter x:Name="ContentPresenterMain" RecognizesAccessKey="True" VerticalAlignment="Center" Margin="4,0,0,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </StackPanel>
                        </Border>
                    </hc:SimplePanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#13ce66"/>
                <Setter Property="BorderBrush" Value="#13ce66"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Button" x:Key="DelBtnStyle" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="Width" Value="80"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="BorderBrush" Value="#ffb6b6"/>
        <Setter Property="Foreground" Value="#ff4949"/>
        <Setter Property="Background" Value="#ffeded"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <hc:SimplePanel>
                        <Border Background="{TemplateBinding Background}" CornerRadius="{Binding Path=(hc:BorderElement.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}"/>
                        <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{Binding Path=(hc:BorderElement.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}">
                                <TextBlock Text="&#xe678;" FontFamily="../../Fonts/#iconfont" FontSize="13" VerticalAlignment="Center"></TextBlock>
                                <ContentPresenter x:Name="ContentPresenterMain" RecognizesAccessKey="True" VerticalAlignment="Center" Margin="4,0,0,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </StackPanel>
                        </Border>
                    </hc:SimplePanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#ff4949"/>
                <Setter Property="BorderBrush" Value="#ff4949"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="MyTabControlStyle" TargetType="{x:Type hc:TabControl}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="1"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type hc:TabControl}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <Grid x:Name="templateRoot" ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0"/>
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Border Panel.ZIndex="997" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="0,0,0,0" Background="{TemplateBinding Background}" Padding="15 5 5 5">
                                <Border.Effect>
                                    <DropShadowEffect Color="#001529" ShadowDepth="4" BlurRadius="5" Opacity="0.13" Direction="315"/>
                                </Border.Effect>
                                <hc:TabPanel x:Name="PART_HeaderPanel" Background="{DynamicResource SecondaryTextBrush}" HorizontalAlignment="Left" IsTabFillEnabled="{TemplateBinding IsTabFillEnabled}" IsItemsHost="True" Margin="0,0,-1,-1" MinHeight="{TemplateBinding TabItemHeight}" TabItemHeight="{TemplateBinding TabItemHeight}" TabItemWidth="{TemplateBinding TabItemWidth}" KeyboardNavigation.TabIndex="1"/>
                            </Border>
                            <Border x:Name="contentPanel" Background="{DynamicResource SecondaryRegionBrush}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost" ContentTemplate="{TemplateBinding SelectedContentTemplate}" Content="{TemplateBinding SelectedContent}" ContentStringFormat="{TemplateBinding SelectedContentStringFormat}" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <Border BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1,0,0,1" Background="{DynamicResource RegionBrush}" Grid.Column="0" HorizontalAlignment="Right" Margin="0,-1,0,0" Grid.Row="0" Visibility="{Binding Visibility, ElementName=PART_OverflowButton}">
                                <hc:ContextMenuToggleButton x:Name="PART_OverflowButton" hc:IconSwitchElement.GeometrySelected="M50.000001,0L100,51.262779 94.262627,57.141584 50.000001,11.767713 5.7373757,57.151686 0,51.27288z" hc:IconElement.Geometry="M512,801.6896L5.12,282.0096 63.2832,222.4128 512,682.3936 960.7168,222.3104 1018.88,281.9072 512,801.6896z" Menu="{x:Null}" Visibility="Collapsed">
                                    <hc:ContextMenuToggleButton.Style>
                                        <Style TargetType="{x:Type ToggleButton}">
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="BorderBrush" Value="Transparent"/>
                                            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                                            <ContentControl Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                                <Path x:Name="PathIcon" Data="{TemplateBinding hc:IconElement.Geometry}" Fill="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Height="{TemplateBinding hc:IconElement.Height}" Stretch="Uniform" SnapsToDevicePixels="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="{TemplateBinding hc:IconElement.Width}"/>
                                                            </ContentControl>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsChecked" Value="True">
                                                                <Setter Property="Data" TargetName="PathIcon" Value="{Binding (hc:IconSwitchElement.GeometrySelected), RelativeSource={RelativeSource TemplatedParent}}"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.BasedOn>
                                                <Style TargetType="{x:Type ToggleButton}">
                                                    <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}"/>
                                                    <Setter Property="Width" Value="30"/>
                                                    <Setter Property="Height" Value="30"/>
                                                    <Setter Property="Padding" Value="8"/>
                                                    <Setter Property="hc:IconElement.Geometry" Value="{x:Null}"/>
                                                    <Setter Property="hc:IconSwitchElement.GeometrySelected" Value="{x:Null}"/>
                                                    <Setter Property="hc:BorderElement.CornerRadius" Value="4"/>
                                                    <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                                                    <Setter Property="BorderThickness" Value="0"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                <hc:SimplePanel>
                                                                    <Border Background="{TemplateBinding Background}" CornerRadius="{Binding (hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding (hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                                        <ContentControl HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                                            <Path x:Name="PathIcon" Data="{TemplateBinding hc:IconElement.Geometry}" Fill="{TemplateBinding Foreground}" Height="{TemplateBinding hc:IconElement.Height}" Stretch="Uniform" SnapsToDevicePixels="True" Width="{TemplateBinding hc:IconElement.Width}"/>
                                                                        </ContentControl>
                                                                    </Border>
                                                                    <Border x:Name="BorderChecked" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="4" CornerRadius="{Binding (hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed"/>
                                                                </hc:SimplePanel>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsChecked" Value="True">
                                                                        <Setter Property="Data" TargetName="PathIcon" Value="{Binding (hc:IconSwitchElement.GeometrySelected), RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.BasedOn>
                                                        <Style TargetType="{x:Type Control}">
                                                            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
                                                            <Setter Property="FontSize" Value="12"/>
                                                            <Setter Property="FocusVisualStyle">
                                                                <Setter.Value>
                                                                    <Style>
                                                                        <Setter Property="Control.Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate>
                                                                                    <Rectangle RadiusY="4" RadiusX="4">
                                                                                        <Rectangle.Style>
                                                                                            <Style TargetType="{x:Type Rectangle}">
                                                                                                <Setter Property="Margin" Value="-2"/>
                                                                                                <Setter Property="Opacity" Value="0.6"/>
                                                                                                <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                                                                <Setter Property="Stroke" Value="{DynamicResource SecondaryBorderBrush}"/>
                                                                                                <Setter Property="StrokeThickness" Value="2"/>
                                                                                                <Setter Property="StrokeDashArray" Value="1 1"/>
                                                                                            </Style>
                                                                                        </Rectangle.Style>
                                                                                    </Rectangle>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </Style.BasedOn>
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Opacity" Value="0.9"/>
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter Property="Opacity" Value="0.6"/>
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Opacity" Value="0.4"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Style.BasedOn>
                                        </Style>
                                    </hc:ContextMenuToggleButton.Style>
                                </hc:ContextMenuToggleButton>
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsScrollable" Value="True"/>
                    <Condition Property="IsTabFillEnabled" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type hc:TabControl}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                <Grid x:Name="templateRoot" ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Border BorderBrush="{DynamicResource BorderBrush}" BorderThickness="0,0,1,1" Background="{DynamicResource RegionBrush}" Grid.Column="0" HorizontalAlignment="Left" Margin="0,-1,0,0" Grid.Row="0" Panel.ZIndex="2">
                                        <Border.CacheMode>
                                            <BitmapCache SnapsToDevicePixels="True"/>
                                        </Border.CacheMode>
                                        <Border.Visibility>
                                            <TemplateBinding Property="ShowScrollButton">
                                                <TemplateBinding.Converter>
                                                    <BooleanToVisibilityConverter/>
                                                </TemplateBinding.Converter>
                                            </TemplateBinding>
                                        </Border.Visibility>
                                        <RepeatButton x:Name="PART_ScrollButtonLeft" Background="{DynamicResource SecondaryRegionBrush}" Foreground="{DynamicResource PrimaryTextBrush}" Focusable="False" hc:IconElement.Geometry="M394.24,512L683.52,248.32C693.76,238.08 693.76,222.72 683.52,212.48 673.28,202.24 657.92,202.24 647.68,212.48L340.48,491.52C335.36,496.64 332.8,504.32 332.8,512 332.8,519.68 335.36,527.36 340.48,532.48L647.68,811.52C657.92,821.76 673.28,821.76 683.52,811.52 693.76,801.28 693.76,785.92 683.52,775.68L394.24,512z" Padding="8">
                                            <RepeatButton.Style>
                                                <Style TargetType="{x:Type RepeatButton}">
                                                    <Setter Property="Background" Value="Transparent"/>
                                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                                    <Setter Property="hc:BorderElement.CornerRadius" Value="0"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{Binding (hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                                    <ContentControl HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                                        <Path Data="{TemplateBinding hc:IconElement.Geometry}" Fill="{TemplateBinding Foreground}" Height="{TemplateBinding hc:IconElement.Height}" Stretch="Uniform" SnapsToDevicePixels="True" Width="{TemplateBinding hc:IconElement.Width}"/>
                                                                    </ContentControl>
                                                                </Border>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.BasedOn>
                                                        <Style TargetType="{x:Type RepeatButton}">
                                                            <Setter Property="Background" Value="{DynamicResource RegionBrush}"/>
                                                            <Setter Property="hc:BorderElement.CornerRadius" Value="4"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                        <hc:SimplePanel>
                                                                            <Border Background="{TemplateBinding Background}" CornerRadius="{Binding (hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding (hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                                                <StackPanel HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Orientation="Horizontal" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                                                    <Path x:Name="PathMain" Data="{TemplateBinding hc:IconElement.Geometry}" Fill="{TemplateBinding Foreground}" Height="{TemplateBinding hc:IconElement.Height}" Stretch="Uniform" SnapsToDevicePixels="True" Width="{TemplateBinding hc:IconElement.Width}"/>
                                                                                    <ContentPresenter x:Name="ContentPresenterMain" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="6,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                                                                                </StackPanel>
                                                                            </Border>
                                                                        </hc:SimplePanel>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="Content" Value="{x:Null}">
                                                                                <Setter Property="Visibility" TargetName="ContentPresenterMain" Value="Collapsed"/>
                                                                            </Trigger>
                                                                            <Trigger Property="hc:IconElement.Geometry" Value="{x:Null}">
                                                                                <Setter Property="Visibility" TargetName="PathMain" Value="Collapsed"/>
                                                                                <Setter Property="Margin" TargetName="ContentPresenterMain" Value="0"/>
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Style.BasedOn>
                                                                <Style TargetType="{x:Type ButtonBase}">
                                                                    <Setter Property="Height" Value="30"/>
                                                                    <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                                                                    <Setter Property="Padding" Value="10,6"/>
                                                                    <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}"/>
                                                                    <Setter Property="BorderThickness" Value="0"/>
                                                                    <Setter Property="HorizontalAlignment" Value="Center"/>
                                                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                                    <Style.BasedOn>
                                                                        <Style TargetType="{x:Type Control}">
                                                                            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
                                                                            <Setter Property="FontSize" Value="12"/>
                                                                            <Setter Property="FocusVisualStyle">
                                                                                <Setter.Value>
                                                                                    <Style>
                                                                                        <Setter Property="Control.Template">
                                                                                            <Setter.Value>
                                                                                                <ControlTemplate>
                                                                                                    <Rectangle RadiusY="4" RadiusX="4">
                                                                                                        <Rectangle.Style>
                                                                                                            <Style TargetType="{x:Type Rectangle}">
                                                                                                                <Setter Property="Margin" Value="-2"/>
                                                                                                                <Setter Property="Opacity" Value="0.6"/>
                                                                                                                <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                                                                                <Setter Property="Stroke" Value="{DynamicResource SecondaryBorderBrush}"/>
                                                                                                                <Setter Property="StrokeThickness" Value="2"/>
                                                                                                                <Setter Property="StrokeDashArray" Value="1 1"/>
                                                                                                            </Style>
                                                                                                        </Rectangle.Style>
                                                                                                    </Rectangle>
                                                                                                </ControlTemplate>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Style>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </Style.BasedOn>
                                                                </Style>
                                                            </Style.BasedOn>
                                                            <Style.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Opacity" Value="0.9"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" Value="0.6"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" Value="0.4"/>
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Style.BasedOn>
                                                </Style>
                                            </RepeatButton.Style>
                                        </RepeatButton>
                                    </Border>
                                    <hc:ScrollViewer x:Name="PART_OverflowScrollviewer" CanMouseWheel="True" Grid.Column="1" HorizontalScrollBarVisibility="Hidden" IsInertiaEnabled="True" IsDeferredScrollingEnabled="True" Orientation="Horizontal" Grid.Row="0">
                                        <Border x:Name="PART_HeaderBorder" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="0,0,0,1" Background="{TemplateBinding Background}">
                                            <hc:TabPanel x:Name="PART_HeaderPanel" Background="{DynamicResource SecondaryTextBrush}" HorizontalAlignment="Left" IsTabFillEnabled="{TemplateBinding IsTabFillEnabled}" IsItemsHost="True" Margin="0,0,-1,-1" MinHeight="{TemplateBinding TabItemHeight}" TabItemHeight="{TemplateBinding TabItemHeight}" TabItemWidth="{TemplateBinding TabItemWidth}" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                                        </Border>
                                    </hc:ScrollViewer>
                                    <Border BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1,0,0,1" Background="{DynamicResource RegionBrush}" Grid.Column="2" HorizontalAlignment="Right" Margin="0,-1,0,0" Grid.Row="0">
                                        <Border.CacheMode>
                                            <BitmapCache SnapsToDevicePixels="True"/>
                                        </Border.CacheMode>
                                        <StackPanel Orientation="Horizontal">
                                            <RepeatButton x:Name="PART_ScrollButtonRight" BorderBrush="{DynamicResource BorderBrush}" Background="{DynamicResource SecondaryRegionBrush}" Foreground="{DynamicResource PrimaryTextBrush}" Focusable="False" hc:IconElement.Geometry="M4.1666641,0C5.2083321,0,6.25,0.41666794,7.0833321,1.25L57.083331,46.666664C57.916664,47.499998 58.33333,48.749998 58.333329,49.999998 58.33333,51.249997 57.916664,52.499997 57.083331,53.333331L7.0833321,98.749996C5.4166641,100.41666 2.9166641,100.41666 1.2499962,98.749996 -0.41666794,97.083328 -0.41666794,94.583328 1.2499962,92.916664L48.333331,49.999998 1.2499962,7.0833321C-0.41666794,5.4166641 -0.41666794,2.9166641 1.2499962,1.25 2.0833282,0.41666794 3.1249962,0 4.1666641,0z" Padding="8">
                                                <RepeatButton.Style>
                                                    <Style TargetType="{x:Type RepeatButton}">
                                                        <Setter Property="Background" Value="Transparent"/>
                                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                                        <Setter Property="hc:BorderElement.CornerRadius" Value="0"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{Binding (hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                                        <ContentControl HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                                            <Path Data="{TemplateBinding hc:IconElement.Geometry}" Fill="{TemplateBinding Foreground}" Height="{TemplateBinding hc:IconElement.Height}" Stretch="Uniform" SnapsToDevicePixels="True" Width="{TemplateBinding hc:IconElement.Width}"/>
                                                                        </ContentControl>
                                                                    </Border>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Style.BasedOn>
                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                <Setter Property="Background" Value="{DynamicResource RegionBrush}"/>
                                                                <Setter Property="hc:BorderElement.CornerRadius" Value="4"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                            <hc:SimplePanel>
                                                                                <Border Background="{TemplateBinding Background}" CornerRadius="{Binding (hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding (hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                                                    <StackPanel HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Orientation="Horizontal" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                                                        <Path x:Name="PathMain" Data="{TemplateBinding hc:IconElement.Geometry}" Fill="{TemplateBinding Foreground}" Height="{TemplateBinding hc:IconElement.Height}" Stretch="Uniform" SnapsToDevicePixels="True" Width="{TemplateBinding hc:IconElement.Width}"/>
                                                                                        <ContentPresenter x:Name="ContentPresenterMain" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="6,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                                                                                    </StackPanel>
                                                                                </Border>
                                                                            </hc:SimplePanel>
                                                                            <ControlTemplate.Triggers>
                                                                                <Trigger Property="Content" Value="{x:Null}">
                                                                                    <Setter Property="Visibility" TargetName="ContentPresenterMain" Value="Collapsed"/>
                                                                                </Trigger>
                                                                                <Trigger Property="hc:IconElement.Geometry" Value="{x:Null}">
                                                                                    <Setter Property="Visibility" TargetName="PathMain" Value="Collapsed"/>
                                                                                    <Setter Property="Margin" TargetName="ContentPresenterMain" Value="0"/>
                                                                                </Trigger>
                                                                            </ControlTemplate.Triggers>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Style.BasedOn>
                                                                    <Style TargetType="{x:Type ButtonBase}">
                                                                        <Setter Property="Height" Value="30"/>
                                                                        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                                                                        <Setter Property="Padding" Value="10,6"/>
                                                                        <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}"/>
                                                                        <Setter Property="BorderThickness" Value="0"/>
                                                                        <Setter Property="HorizontalAlignment" Value="Center"/>
                                                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                                                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                                        <Style.BasedOn>
                                                                            <Style TargetType="{x:Type Control}">
                                                                                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
                                                                                <Setter Property="FontSize" Value="12"/>
                                                                                <Setter Property="FocusVisualStyle">
                                                                                    <Setter.Value>
                                                                                        <Style>
                                                                                            <Setter Property="Control.Template">
                                                                                                <Setter.Value>
                                                                                                    <ControlTemplate>
                                                                                                        <Rectangle RadiusY="4" RadiusX="4">
                                                                                                            <Rectangle.Style>
                                                                                                                <Style TargetType="{x:Type Rectangle}">
                                                                                                                    <Setter Property="Margin" Value="-2"/>
                                                                                                                    <Setter Property="Opacity" Value="0.6"/>
                                                                                                                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                                                                                    <Setter Property="Stroke" Value="{DynamicResource SecondaryBorderBrush}"/>
                                                                                                                    <Setter Property="StrokeThickness" Value="2"/>
                                                                                                                    <Setter Property="StrokeDashArray" Value="1 1"/>
                                                                                                                </Style>
                                                                                                            </Rectangle.Style>
                                                                                                        </Rectangle>
                                                                                                    </ControlTemplate>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                        </Style>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </Style.BasedOn>
                                                                    </Style>
                                                                </Style.BasedOn>
                                                                <Style.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Opacity" Value="0.9"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsPressed" Value="True">
                                                                        <Setter Property="Opacity" Value="0.6"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter Property="Opacity" Value="0.4"/>
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Style.BasedOn>
                                                    </Style>
                                                </RepeatButton.Style>
                                                <RepeatButton.Visibility>
                                                    <TemplateBinding Property="ShowScrollButton">
                                                        <TemplateBinding.Converter>
                                                            <BooleanToVisibilityConverter/>
                                                        </TemplateBinding.Converter>
                                                    </TemplateBinding>
                                                </RepeatButton.Visibility>
                                            </RepeatButton>
                                            <Border Background="{DynamicResource BorderBrush}" Visibility="{Binding Visibility, ElementName=PART_OverflowButton}" Width="1"/>
                                            <hc:ContextMenuToggleButton x:Name="PART_OverflowButton" hc:IconSwitchElement.GeometrySelected="M50.000001,0L100,51.262779 94.262627,57.141584 50.000001,11.767713 5.7373757,57.151686 0,51.27288z" hc:IconElement.Geometry="M512,801.6896L5.12,282.0096 63.2832,222.4128 512,682.3936 960.7168,222.3104 1018.88,281.9072 512,801.6896z" Menu="{x:Null}" Visibility="Collapsed">
                                                <hc:ContextMenuToggleButton.Style>
                                                    <Style TargetType="{x:Type ToggleButton}">
                                                        <Setter Property="Background" Value="Transparent"/>
                                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                                        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                                                        <ContentControl Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                                            <Path x:Name="PathIcon" Data="{TemplateBinding hc:IconElement.Geometry}" Fill="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Height="{TemplateBinding hc:IconElement.Height}" Stretch="Uniform" SnapsToDevicePixels="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="{TemplateBinding hc:IconElement.Width}"/>
                                                                        </ContentControl>
                                                                    </Border>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsChecked" Value="True">
                                                                            <Setter Property="Data" TargetName="PathIcon" Value="{Binding (hc:IconSwitchElement.GeometrySelected), RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Style.BasedOn>
                                                            <Style TargetType="{x:Type ToggleButton}">
                                                                <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}"/>
                                                                <Setter Property="Width" Value="30"/>
                                                                <Setter Property="Height" Value="30"/>
                                                                <Setter Property="Padding" Value="8"/>
                                                                <Setter Property="hc:IconElement.Geometry" Value="{x:Null}"/>
                                                                <Setter Property="hc:IconSwitchElement.GeometrySelected" Value="{x:Null}"/>
                                                                <Setter Property="hc:BorderElement.CornerRadius" Value="4"/>
                                                                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                                                                <Setter Property="BorderThickness" Value="0"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                            <hc:SimplePanel>
                                                                                <Border Background="{TemplateBinding Background}" CornerRadius="{Binding (hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding (hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                                                    <ContentControl HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                                                        <Path x:Name="PathIcon" Data="{TemplateBinding hc:IconElement.Geometry}" Fill="{TemplateBinding Foreground}" Height="{TemplateBinding hc:IconElement.Height}" Stretch="Uniform" SnapsToDevicePixels="True" Width="{TemplateBinding hc:IconElement.Width}"/>
                                                                                    </ContentControl>
                                                                                </Border>
                                                                                <Border x:Name="BorderChecked" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="4" CornerRadius="{Binding (hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed"/>
                                                                            </hc:SimplePanel>
                                                                            <ControlTemplate.Triggers>
                                                                                <Trigger Property="IsChecked" Value="True">
                                                                                    <Setter Property="Data" TargetName="PathIcon" Value="{Binding (hc:IconSwitchElement.GeometrySelected), RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                                </Trigger>
                                                                            </ControlTemplate.Triggers>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Style.BasedOn>
                                                                    <Style TargetType="{x:Type Control}">
                                                                        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
                                                                        <Setter Property="FontSize" Value="12"/>
                                                                        <Setter Property="FocusVisualStyle">
                                                                            <Setter.Value>
                                                                                <Style>
                                                                                    <Setter Property="Control.Template">
                                                                                        <Setter.Value>
                                                                                            <ControlTemplate>
                                                                                                <Rectangle RadiusY="4" RadiusX="4">
                                                                                                    <Rectangle.Style>
                                                                                                        <Style TargetType="{x:Type Rectangle}">
                                                                                                            <Setter Property="Margin" Value="-2"/>
                                                                                                            <Setter Property="Opacity" Value="0.6"/>
                                                                                                            <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                                                                            <Setter Property="Stroke" Value="{DynamicResource SecondaryBorderBrush}"/>
                                                                                                            <Setter Property="StrokeThickness" Value="2"/>
                                                                                                            <Setter Property="StrokeDashArray" Value="1 1"/>
                                                                                                        </Style>
                                                                                                    </Rectangle.Style>
                                                                                                </Rectangle>
                                                                                            </ControlTemplate>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                </Style>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </Style.BasedOn>
                                                                <Style.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Opacity" Value="0.9"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsPressed" Value="True">
                                                                        <Setter Property="Opacity" Value="0.6"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter Property="Opacity" Value="0.4"/>
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Style.BasedOn>
                                                    </Style>
                                                </hc:ContextMenuToggleButton.Style>
                                            </hc:ContextMenuToggleButton>
                                        </StackPanel>
                                    </Border>
                                    <Border x:Name="contentPanel" Background="{DynamicResource SecondaryRegionBrush}" Grid.ColumnSpan="3" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                        <ContentPresenter x:Name="PART_SelectedContentHost" ContentTemplate="{TemplateBinding SelectedContentTemplate}" Content="{TemplateBinding SelectedContent}" ContentStringFormat="{TemplateBinding SelectedContentStringFormat}" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Border>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>